name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_ID: i-0671beccbd2630a

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Verify AWS CLI installation
        run: aws --version

      - name: Verify AWS credentials from instance role
        run: aws sts get-caller-identity

      - name: Get instance public IP
        id: get-instance-ip
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-id ${{ env.EC2_INSTANCE_ID }} \
            --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
            --output text)
          echo "PUBLIC_IP=${PUBLIC_IP}" >> $GITHUB_ENV
          echo "::set-output name=public_ip::${PUBLIC_IP}"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.get-instance-ip.outputs.public_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Update system and install Docker
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker

            # Set up application directory and clone repository
            mkdir -p /home/ubuntu/app
            git clone https://github.com/PrateekAnand3101/Django-website /home/ubuntu/app

            # Build and run Docker container
            cd /home/ubuntu/app
            docker build -t django-website .
            docker stop django-website || true
            docker rm django-website || true
            docker run -d --name django-website -p 8000:8000 django-website

      - name: Clean up
        run: |
          docker stop django-website || true
          docker rm django-website || true
